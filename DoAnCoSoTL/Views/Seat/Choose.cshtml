@model List<DoAnCoSoTL.Models.Seat>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
@{
    ViewData["Title"] = "Choose Seat";
    //var selectedSeatCodes = ViewData["SelectedSeatCodes"] as List<string> ?? new List<string>();
    var selectedSeatIds = ViewData["SelectedSeatIds"] as List<int> ?? new List<int>();
}

<h2>Choose Seat</h2>
<p>Screening ID: @ViewData["ScreeningId"]</p>
<p>Time Slot: @ViewData["TimeSlot"]</p>
<div id="ticketPrice">Giá vé: $@ViewBag.TicketPrice</div>

<a href="@Url.Action("ClearCart", "SeatBookingCart", new { movieId = ViewData["MovieId"] })">Trở về</a>

<div class="screen-divider">
    <hr class="divider-line">
    <div class="screen-text">Màn hình</div>
</div>


<div class="seat-layout">
    @for (int row = 1; row <= 8; row++)
    {
        <div class="seat-row">
            @for (int seatNumber = 1; seatNumber <= 12; seatNumber++)
            {
                //var seatId = (row - 1) * 12 + seatNumber;
                string seatCode = $"{(char)('A' + row - 1)}{seatNumber}";
                var seat = Model.FirstOrDefault(s => s.SeatCode == seatCode);
                var isAvailable = seat != null && seat.IsAvailable; // Kiểm tra xem ghế có sẵn hay không

                // <button class="seat @(isAvailable ? "" :  "gray disabled")" data-seat-id="@seat.Id" data-seat-code="@seatCode">
                //     <span class="seat-text">@seatCode</span>
                // </button>
                var isSelected = selectedSeatIds.Contains(seat.Id); // Kiểm tra nếu ghế đã được chọn

                <button class="seat @(isAvailable ? (isSelected ? "selected" : "") : "gray disabled")" data-seat-id="@seat.Id" data-seat-code="@seatCode">
                    <span class="seat-text">@seatCode</span>
                </button>
            }
        </div>
    }
</div>


<div class="legend" style="margin-bottom: 20px;">
    <div class="legend-item">
        <div class="seat-legend pink"></div>
        <span>Ghế đã chọn</span>
    </div>
    <div class="legend-item">
        <div class="seat-legend white"></div>
        <span>Ghế trống</span>
    </div>
    <div class="legend-item">
        <div class="seat-legend gray"></div>
        <span>Ghế đã được đặt</span>
    </div>
</div>

<div id="selectedSeats">Số ghế đã chọn:</div> <!-- Phần tử để hiển thị số ghế đã chọn -->

<form asp-area="" asp-controller="SeatBookingCart" asp-action="Index">
    <input type="hidden" name="screeningId" value=" @ViewData["ScreeningId"]" />
    <input type="hidden" name="timeSlot" value="@ViewData["TimeSlot"]" />
    <input type="hidden" name="movieId" value="@ViewBag.MovieId" />
    <button type="submit" class="btn btn-primary">Mua vé</button>
</form>

<div id="totalPrice">Tổng tiền: $0</div>

<script>

    $(document).ready(function () {
        $('.seat').click(function (event) {
            var isAvailable = !$(this).hasClass('gray');
            var seatId = $(this).data('seat-id');
            var screeningId = '@ViewData["ScreeningId"]'; // Get screeningId from ViewData
            var timeSlot = '@ViewData["TimeSlot"]'; // Get timeSlot from ViewData

            if (isAvailable) {
                $(this).toggleClass('selected');
                if ($(this).hasClass('selected')) {
                    addToCart(seatId); // Pass screeningId and timeSlot to addToCart function
                } else {
                    removeFromCart(seatId);
                }
            }
            event.preventDefault();
            updateTotalPrice();
            updateSelectedSeats();
        });



        function addToCart(seatId) {
            console.log('Adding seat to cart:', seatId);
            $.post('/SeatBookingCart/AddToCart', { seatId: seatId }, function (data) {
                // Do nothing after adding to cart
            });
        }


        function removeFromCart(seatId) {
            $.post('/SeatBookingCart/RemoveFromCart', { seatId: seatId }, function (data) {
                // Xử lý kết quả từ server nếu cần
                // Ví dụ: cập nhật giao diện người dùng
                //location.reload();
            });
        }

        function updateTotalPrice() {
            // Đếm số lượng ghế đã chọn
            var selectedSeatCount = $('.seat.selected').length;

            // Lấy giá vé từ dữ liệu được truyền từ server (phải đảm bảo rằng giá vé đã được gửi đến view)
            var ticketPrice = parseFloat($('#ticketPrice').text().replace('Giá vé: $', '')); // Sửa lỗi ở đây

            // Tính tổng tiền
            var totalPrice = selectedSeatCount * ticketPrice;

            // Cập nhật nội dung của phần tử HTML hiển thị tổng tiền
            $('#totalPrice').text('Tổng tiền: $' + totalPrice.toFixed(2));
        }

        function updateSelectedSeats() {
            var selectedSeats = [];
            $('.seat.selected').each(function () {
                var seatText = $(this).find('.seat-text').text(); // Lấy nội dung của ghế đã chọn
                selectedSeats.push(seatText); // Thêm vào mảng các ghế đã chọn
            });

            // Cập nhật nội dung của phần tử HTML hiển thị số ghế đã chọn
            $('#selectedSeats').text('Số ghế đã chọn: ' + selectedSeats.join(', '));
        }
    });
</script>


<style>
    .seat-layout {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 10px;
    }

    .seat-row {
        display: flex;
        gap: 10px;
        align-items: center;
    }

    .row-number {
        width: 30px;
        text-align: center;
    }

    .seat {
        width: 40px; /* Độ rộng của button */
        height: 40px; /* Độ cao của button */
        border: 1px solid #000;
        background-color: #fff;
        display: flex;
        justify-content: center;
        align-items: center;
        cursor: pointer;
    }

        .seat:hover {
            background-color: #add8e6;
        }

        .seat.selected {
            background-color: pink; /* Đặt màu hồng cho nút đã được chọn */
        }


    .seat-text {
        font-size: 16px; /* Kích thước font của chữ trong button */
    }

    .screen-divider {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 10px;
    }

    .divider-line {
        width: 200px; /* Đặt độ rộng mong muốn của thanh ngang */
        border: none;
        border-top: 2px solid black;
        margin-top: 10px;
    }

    .screen-text {
        font-weight: bold;
        margin-top: -30px; /* Điều chỉnh margin-top để chữ "Màn hình" nằm gần sát thanh ngang */
        margin-bottom: 30px;
    }

    .legend {
        display: flex;
        justify-content: center;
        gap: 20px;
        margin-top: 20px;
    }

    .legend-item {
        display: flex;
        gap: 10px;
    }

    .seat-legend {
        width: 20px;
        height: 20px;
        border: 1px solid #000;
    }

        .seat-legend.pink {
            background-color: pink;
        }

        .seat-legend.white {
            background-color: #fff;
        }

        .seat-legend.gray {
            background-color: gray;
        }

    .seat.gray.disabled {
        background-color: gray;
        pointer-events: none; /* Ngăn chặn sự kiện click */
    }
</style>
